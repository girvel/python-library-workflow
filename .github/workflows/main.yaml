name: Test & publish ðŸ“¦ to PyPI

on:
  workflow_call:
    inputs:
      publish_as:
        description: 'How to publish the package. Either ``, `unstable` or `release`'
        required: false
        default: ''
        type: string
    secrets:
      REPO_TOKEN:
        required: true

jobs:
  test:
    name: Launch tests & calculate coverage
    strategy:
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04, windows-2019]
    runs-on: ${{ matrix.os }}
    steps:

    - uses: actions/checkout@v2

    - name: Set up Python 3.9
      uses: actions/setup-python@v1
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        pip install --user -e .
        pip install coverage

    - name: Launch unit tests
      run: python -m unittest discover -s tests

    - name: Launch integration tests
      run: |
        coverage run --source tiny_storage -m unittest discover -s integration_tests

    - name: Parse report
      if: matrix.os == 'ubuntu-20.04'
      run: |
        coverage report | tee report.txt
        cat report.txt \
          | sed -n 's/TOTAL[[:space:]]*[[:digit:]]*[[:space:]]*[[:digit:]]*[[:space:]]*// p' \
          | tee coverage.txt

    - name: Upload coverage artifact
      uses: actions/upload-artifact@v2
      if: matrix.os == 'ubuntu-20.04'
      with:
        name: coverage
        path: coverage.txt

  generate-badge:
    needs: test
    name: Generate test coverage badge
    runs-on: ubuntu-latest
    steps:

    - name: Download coverage artifact
      uses: actions/download-artifact@v2
      with:
        name: coverage

    - name: Get artifact content
      id: get
      run: echo '::set-output name=coverage::'$(cat coverage.txt)

    - name: Determine badge color
      id: color
      run: |
        value=$(cat coverage.txt | sed 's/.$//')
        
        if (( $value == 100 )); then
          echo '::set-output name=value::yellow'
        elif (( $value >= 98 )); then
          echo '::set-output name=value::green'
        elif (( $value >= 80 )); then 
          echo '::set-output name=value::blue'
        else
          echo '::set-output name=value::red'
        fi

    - name: Generate a badge
      uses: RubbaBoy/BYOB@v1.2.1
      with:
        NAME: coverage
        LABEL: 'Test coverage'
        STATUS: ${{ steps.get.outputs.coverage }}
        COLOR: ${{ steps.color.outputs.value }}
        GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
        
  publish:
    name: Publish ðŸ“¦ to PyPI
    needs: test
    runs-on: ubuntu-latest
    if: inputs.publish_as != ''
    steps:

    - uses: actions/checkout@master

    - name: Set up Python 3.9
      uses: actions/setup-python@v1
      with:
        python-version: 3.9

    - name: Install pypa/build
      run: python -m pip install build --user

    - name: \[release] Build a binary wheel and a source tarball
      if: inputs.publish_as == 'release'
      run: python -m build --sdist --wheel --outdir dist/

    - name: \[release] Publish ðŸ“¦ to PyPI
      if: inputs.publish_as == 'release'
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
        
    - name: Append -unstable to package name
      run: sed -Ei 's/([[:blank:]]*name="[^"]*)(")/\1-unstable\2/' setup.py

    - name: \[unstable] Build a binary wheel and a source tarball
      run: python -m build --sdist --wheel --outdir dist/

    - name: \[unstable] Publish ðŸ“¦ to PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
